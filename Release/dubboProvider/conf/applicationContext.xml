<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置 </description>
	<context:component-scan base-package="com.common"></context:component-scan>
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="com.common.db.transactionmanager.DSTransactionManager">
  		<property name="dbutilsTemplate" ref="dbutilsTemplate" />
	</bean>
	<!--获取上下文-->
	<bean id="applicationContextHelper" class="com.common.tool.ApplicationContextHelper"/>
	<bean id="coreService" class="com.common.core.service.impl.CoreServiceImpl"></bean>
	<bean id="commonService" class="com.common.service.impl.CommonServiceImpl"></bean>
	<bean id="restProjectService" class="com.wanda.service.impl.RestUserEatServiceImpl">
		<property name="commonService" ref="commonService" />
	</bean>
	<bean id="wandaOrderService" class="com.common.wanda.service.impl.WandaOrderServiceImpl">
	</bean>
	<bean id="wandaBoxService" class="com.common.wanda.service.impl.WandaBoxServiceImpl">
	</bean>
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:/application.properties
				</value>
			</list>
		</property>
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<property name="url" value="${db.jdbc.url}" />
		<property name="username" value="${db.jdbc.username}" />
		<property name="password" value="${db.jdbc.password}" />
		<property name="filters"><value>stat,log4j,wall</value></property>
		<property name="maxActive" value="${dbcp.maxActive}" />
     	<property name="initialSize"><value>1</value></property>
     	<property name="maxWait"><value>60000</value></property>
     	<property name="minIdle"><value>1</value></property>
     	<property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
     	<property name="minEvictableIdleTimeMillis"><value>300000</value></property>
     	<property name="validationQuery"><value>SELECT 'x'</value></property>
		<property name="ValidationQueryTimeout"><value>120</value></property>
     	<property name="testWhileIdle"><value>true</value></property>
     	<property name="testOnBorrow"><value>false</value></property>
     	<property name="testOnReturn"><value>false</value></property>
     	<property name="poolPreparedStatements"><value>true</value></property>
     	<property name="maxOpenPreparedStatements"><value>20</value></property>
		<!-- 超过时间限制是否回收 -->  
		<property name="removeAbandoned" value="true" />
		<!-- 超时时间；单位为秒。180秒 3分钟-->  
		<property name="removeAbandonedTimeout" value="180" />
		<!-- 关闭abanded连接时输出错误日志 -->  
		<property name="logAbandoned" value="true" />
	</bean>
    <!-- dbutils Config -->
    <bean id="dbutilsTemplate" class="com.common.db.template.DbutilsTemplate" init-method="init" destroy-method="close">
        <property name="defaultDataSource" ref="dataSource" />
    </bean>
    <bean id="commonDBDao" class="com.common.dao.CommonDBDao">
        <property name="dbutilsTemplate" ref="dbutilsTemplate" />
    </bean>
  
    <bean id="shiroDao" class="com.common.dao.ShiroDao">
        <property name="dbutilsTemplate" ref="dbutilsTemplate" />
    </bean>
    <!-- redis 相关配置 -->
    <bean id="redispoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}" />  
    </bean>
    <bean id="redisconnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="usePool" value="${redis.usePool}" />
        <property name="hostName" value="${redis.host}" />  
        <property name="port" value="${redis.port}" />  
        <property name="password" value="${redis.pass}" />  
        <property name="timeout" value="${redis.timeout}" />  
        <constructor-arg index="0" ref="redispoolConfig" />
	</bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
        <property name="connectionFactory"   ref="redisconnectionFactory" />
	<property name="keySerializer">  
		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	</property>  
	<property name="valueSerializer">  
		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	</property>  
	<property name="hashKeySerializer">  
		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	</property>  
	<property name="hashValueSerializer">  
		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	</property> 
    </bean>  
</beans>