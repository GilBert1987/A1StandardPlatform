<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://camel.apache.org/schema/spring
	http://camel.apache.org/schema/spring/camel-spring.xsd
	http://www.springframework.org/schema/jms
    http://www.springframework.org/schema/jms/spring-jms-4.0.xsd
    http://activemq.apache.org/schema/core
    http://activemq.apache.org/schema/core/activemq-core-5.13.2.xsd
	"
	default-autowire="byName"  default-init-method="init">
	<!-- ActiveMQ 连接工厂 -->
 	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
	<!-- 如果连接网络：tcp://ip:61616；未连接网络：tcp://localhost:61616 以及用户名，密码-->
	<!--<amq:connectionFactory id="amqConnectionFactory" brokerURL="failover:(tcp://localhost:61616,tcp://localhost:61616)?initialReconnectDelay=100" />-->
	<!--
	<amq:connectionFactory id="topicAmqConnectionFactory" brokerURL="failover:(tcp://localhost:61616)?initialReconnectDelay=100" />
	<amq:connectionFactory id="queueAmqConnectionFactory" brokerURL="failover:(tcp://localhost:61616)?initialReconnectDelay=100" />
	-->
	<!-- Spring Caching连接工厂 -->
 	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->  
	<!--
	<bean id="topicConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
		<!--
  		<property name="targetConnectionFactory" ref="topicAmqConnectionFactory"></property>
  		<!-- 同上，同理 -->
		<!-- <constructor-arg ref="amqConnectionFactory" /> -->
		<!-- Session缓存数量 -->
		<!--
		<property name="sessionCacheSize" value="100" />
	</bean>
	<bean id="queueConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->  
		<!--
  		<property name="targetConnectionFactory" ref="queueAmqConnectionFactory"></property>
  		<!-- 同上，同理 -->
		<!-- <constructor-arg ref="amqConnectionFactory" /> -->
		<!-- Session缓存数量 -->
		<!--
		<property name="sessionCacheSize" value="100" />
	</bean>
	<!-- Spring JmsTemplate 的消息生产者 start-->
	<!-- 定义JmsTemplate的Queue类型 -->
	<!--
	<bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
		<!--
		<constructor-arg ref="queueAmqConnectionFactory" />
		<!-- 非pub/sub模型（发布/订阅），即队列模式 -->
		<!--
		<property name="pubSubDomain" value="false" />
	</bean>
	
	<!-- 定义JmsTemplate的Topic类型 -->
	<!--
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->  
		<!--
		<constructor-arg ref="topicAmqConnectionFactory" />
		<!-- pub/sub模型（发布/订阅） -->
		<!--
		<property name="pubSubDomain" value="true" />
	</bean>	
	<!-- 定义Topic监听器 -->
	<!--
	<bean id="topicMessageListListenerContainer" class="com.common.jms.listenercontainer.topicMessageListListenerContainer" init-method="init" lazy-init="true">
		<property name="servertype" value="tomcat" />
		<property name="connectionFactory" ref="topicConnectionFactory"></property>
	</bean>
	<bean id="queueMessageListListenerContainer" class="com.common.jms.listenercontainer.queueMessageListListenerContainer" init-method="init" lazy-init="true">
		<property name="servertype" value="tomcat" />
		<property name="connectionFactory" ref="queueConnectionFactory"></property>
	</bean>
	-->
	<bean id="queueMessageListListener" class="com.common.jms.listenercontainer.queueMessageListListener" init-method="init" destroy-method="destroy" parent="applicationContextHelper">
		<property name="servertype" value="tomcat" />
	</bean>
	<bean id="topicMessageListListener" class="com.common.jms.listenercontainer.topicMessageListListener" init-method="init" destroy-method="destroy" parent="applicationContextHelper">
		<property name="servertype" value="tomcat" />
	</bean>
	<!-- 服务类 end -->
	<bean id="queueSenderService" class="com.common.jms.producer.queue.QueueSenderServiceImpl" />
	<bean id="topicSenderService" class="com.common.jms.producer.topic.TopicSenderServiceImpl" />
</beans>