<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 解决ajax返回string乱码,需要在annotation-driven之前 -->
	<!-- 处理json -->  
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
		<property name="supportedMediaTypes">  
			<list>  
                		<value>text/html;charset=UTF-8</value>  
                		<value>application/json;charset=UTF-8</value>  
			</list>  
		</property>  
	</bean>
	<bean id="urlMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        	<property name="mappings">
			<props>
				<!--<prop key="platform/upload/javaLargeFileAsync">fileController</prop>-->
			</props>
		</property>
	</bean>
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理 -->  
	<mvc:resources mapping="/assets/**" location="/assets/"/>  
	<mvc:resources mapping="/css/**" location="/css/"/>  
	<mvc:resources mapping="/js/**" location="/js/"/>  
	<mvc:resources mapping="/img/**" location="/img/"/>  
	<mvc:resources mapping="/platform/js/**" location="/platform/js/"/>
	<mvc:resources mapping="/platform/css/**" location="/platform/css/"/>
	<mvc:resources mapping="/product/js/**" location="/product/js/"/>
	<mvc:resources mapping="/product/css/**" location="/product/css/"/>
	<mvc:interceptors>
		<mvc:interceptor>  
            <!--设置拦截的路径-->
			<mvc:mapping path="/**/*.form" /> 
			<mvc:mapping path="/**/*.tool" />
			<mvc:mapping path="/**/*.query" />
			<mvc:mapping path="/**/*.tree" />
			<mvc:mapping path="/**/*.frame" />
			<mvc:mapping path="/**/*.menu" />
			<bean class="com.common.tool.PageHandlerInterceptor" />
        </mvc:interceptor>
		<mvc:interceptor>  
            <!--设置拦截的路径-->
			<mvc:mapping path="/success" /> 
			<bean class="com.common.tool.SuccessHandlerInterceptor" />
        </mvc:interceptor>
	</mvc:interceptors>
  	<context:annotation-config />
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入-->
	<context:component-scan base-package="com.common">
	</context:component-scan>
    <!--处理直接返回json格式字符串-->  
    <bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
    	<property name = "supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property> 
    </bean>  
  	<!-- 解决ajax返回string乱码,需要在annotation-driven之前 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		 <property name="messageConverters">  
            <list>  
                <ref bean="stringHttpMessageConverter" />  
                <ref bean="mappingJacksonHttpMessageConverter" />  
            </list>  
        </property>  
	</bean>
	<mvc:annotation-driven>
		<!-- 配置超时时间 -->
        <mvc:async-support default-timeout="3000">
        <!-- 这里可以配置callable或者deferred-result拦截器 -->
        </mvc:async-support>
	</mvc:annotation-driven>
		
	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->		
	<mvc:default-servlet-handler/>
	<!-- 文件下载 -->
	<bean id="fileController" class="com.common.controller.FileController"></bean>
	<!-- 上传插件 加上会自动封装 request -> DefaultMultipartHttpServletRequest 导致 request.getInputStream 获取为空 最终上传失败! -->
	<!--
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="102400000"/>  
	</bean>
	-->
	<!-- 基础配置 -->
	<bean class="com.common.viewResolver.FormViewResolver">
		<property name="prefix" value="/WEB-INF/form/"/>
		<property name="temppage" value="/WEB-INF/tempform/"/>
		<property name="templatepage" value="/WEB-INF/form/page.html"/>
		<property name="jstag" value="{jstag}"/>
		<property name="formtag" value="{formtag}"/>
		<property name="buttontag" value="{buttontag}"/>
		<property name="formname" value="{formname}"/>
		<property name="jsbutton" value="{jsbutton}"/>
		<property name="taglist" value="{taglist}" />
		<property name="hiddentag" value="{hiddentag}" />
		<property name="titlename" value="{titlename}"/>
		<property name="showbutton" value="{showbutton}"/>
		<property name="showformname" value="{showformname}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="suffix" value=".form"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="order" value="1"/>
	</bean>
	<bean class="com.common.viewResolver.QueryViewResolver">
		<property name="prefix" value="/WEB-INF/query/"/>
		<property name="temppage" value="/WEB-INF/tempquery/"/>
		<property name="templatepage" value="/WEB-INF/query/page.html"/>
		<property name="jstag" value="{jstag}"/>
		<property name="titlename" value="{titlename}"/>
		<property name="head" value="{head}"/>
		<property name="buttonlist" value="{buttonlist}"/>
		<property name="quickquery" value="{quickquery}"/>
		<property name="query" value="{query}"/>
		<property name="toollist" value="{toollist}"/>
		<property name="tableHead" value="{tableHead}"/>
		<property name="tableTotal" value="{tableTotal}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="suffix" value=".query"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="order" value="2"/>
	</bean>
	<bean class="com.common.viewResolver.MenuViewResolver">
		<property name="prefix" value="/WEB-INF/menu/"/>
		<property name="temppage" value="/WEB-INF/tempmenu/"/>
		<property name="templatepage" value="/WEB-INF/menu/page.html"/>
		<property name="titlename" value="{titlename}"/>
		<property name="shortcut" value="{shortcut}"/>
		<property name="menus" value="{menus}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="suffix" value=".menu"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="order" value="3"/>
	</bean>
	<bean class="com.common.viewResolver.TreeViewResolver">
		<property name="prefix" value="/WEB-INF/tree/"/>
		<property name="temppage" value="/WEB-INF/temptree/"/>
		<property name="templatepage" value="/WEB-INF/tree/page.html"/>
		<property name="suffix" value=".tree"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="titlename" value="{titlename}"/>
		<property name="jstag" value="{jstag}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="order" value="4"/>
	</bean>
	<bean class="com.common.viewResolver.ToolViewResolver">
		<property name="prefix" value="/WEB-INF/tool/"/>
		<property name="temppage" value="/WEB-INF/temptool/"/>
		<property name="templatepage" value="/WEB-INF/tool/page.html"/>
		<property name="suffix" value=".tool"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="titlename" value="{titlename}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="order" value="5"/>
	</bean>
	<bean class="com.common.viewResolver.FrameViewResolver">
		<property name="prefix" value="/WEB-INF/frame/"/>
		<property name="temppage" value="/WEB-INF/tempframe/"/>
		<property name="templatepage" value="/WEB-INF/frame/page.html"/>
		<property name="suffix" value=".frame"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="titlename" value="{titlename}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="order" value="6"/>
	</bean>
	<bean class="com.common.viewResolver.WorkFlowViewResolver">
		<property name="prefix" value="/WEB-INF/workflow/"/>
		<property name="temppage" value="/WEB-INF/tempworkflow/"/>
		<property name="templatepage" value="/WEB-INF/workflow/page.html"/>
		<property name="jstag" value="{jstag}"/>
		<property name="jsbutton" value="{jsbutton}"/>
		<property name="taglist" value="{taglist}" />
		<property name="hiddentag" value="{hiddentag}" />
		<property name="titlename" value="{titlename}"/>
		<property name="formtag" value="{formtag}"/>
		<property name="cacheName" value="ClassCachingFilter"/>
		<property name="suffix" value=".wf"/>
		<property name="defaultEncoding" value="utf-8"/>
		<property name="order" value="7"/>
	</bean>
	<!-- 定义JSP文件的位置 --> 
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/index"/>
	
	 <!-- 全局异常配置 start -->  
     <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
         <property name="exceptionMappings">  
             <props>  
                 <prop key="java.lang.Exception">error/500</prop>  
                 <prop key="java.lang.Throwable">error/500</prop>
                 <prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>  
             </props>  
         </property>  
         <property name="statusCodes">  
             <props>  
                 <prop key="500">500</prop>  
                 <prop key="404">404</prop>
                 <prop key="403">403</prop>  
             </props>  
         </property>  
         <!-- 设置日志输出级别，不定义则默认不输出警告等错误日志信息 -->  
         <property name="warnLogCategory" value="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"/>  
         <!-- 默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置 -->  
         <property name="defaultErrorView" value="error/500"/>  
         <!-- 默认HTTP状态码 -->  
         <property name="defaultStatusCode" value="500"/>  
     </bean>  
     <!-- 全局异常配置 end -->	
</beans>
